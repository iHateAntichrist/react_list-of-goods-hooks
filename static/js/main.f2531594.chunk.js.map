{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortBy","setSortBy","isReverse","setIsReverse","reorderedGoods","goods","visibleGoods","sort","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,uBAAAA,I,mBAAAA,I,gBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAA4BC,mBAASH,EAASI,MAA9C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KAmBMC,EAjDD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,OAAQE,EACV,EADUA,UAEJI,EAAY,YAAOD,GAqBzB,OAnBAC,EAAaC,MAAK,SAACC,EAAWC,GAC5B,OAAQT,GACN,KAAKL,EAASe,SACZ,OAAOF,EAAUG,cAAcF,GAEjC,KAAKd,EAASiB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OAEvC,QACE,OAAO,MAITX,GACFI,EAAaQ,UAGfC,QAAQC,IAAIhB,EAAQE,GAEbI,EAwBgBW,CACrBrB,EACA,CACEI,SACAE,cAYJ,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBAAkB,CAC3B,WAAYpB,IAAWL,EAASe,WAGpCW,QA3Ce,WACrBpB,EAAUN,EAASe,WAmCf,iCAYA,wBACES,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,WAAYpB,IAAWL,EAASiB,SAGpCS,QAnDa,WACnBpB,EAAUN,EAASiB,SA2Cf,4BAYA,wBACEO,KAAK,SACLD,UACEE,IAAW,oBAAqB,CAC9B,YAA0B,IAAdlB,IAGhBmB,QA3Dc,WACpBlB,GAAcD,IAmDV,uBAlCc,IAAdA,GAAuBF,IAAWL,EAASI,OA+CzC,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAhEU,WAClBpB,EAAUN,EAASI,MACnBI,GAAa,IA2DP,sBAUJ,6BACE,6BACGC,EAAekB,KAAI,SAAAC,GAAI,OACtB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,cCjJrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f2531594.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET,\n  LENGTH,\n  NONE,\n}\n\ntype ReorderOptions = {\n  sortBy: SortType,\n  isReverse: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortBy, isReverse }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortBy) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReverse) {\n    visibleGoods.reverse();\n  }\n\n  console.log(sortBy, isReverse);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortBy, setSortBy] = useState(SortType.NONE);\n  const [isReverse, setIsReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortBy(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortBy(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setIsReverse(!isReverse);\n  };\n\n  const handleReset = () => {\n    setSortBy(SortType.NONE);\n    setIsReverse(false);\n  };\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    {\n      sortBy,\n      isReverse,\n    },\n  );\n\n  const IsActiveResetButton = () => {\n    if (isReverse === false && sortBy === SortType.NONE) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info', {\n              'is-light': sortBy !== SortType.ALPHABET,\n            })\n          }\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-success', {\n              'is-light': sortBy !== SortType.LENGTH,\n            })\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-warning', {\n              'is-light': isReverse === false,\n            })\n          }\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {IsActiveResetButton() && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {reorderedGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}